#!/usr/bin/env node
'use strict';
const account = require('./../cmd-account');
const ipfs = require('./../cmd-ipfs');
const config = require('./../cmd-config');
const colors = require('colors');
const program = require('commander');
const validator = require('validator');

program
    .version('0.0.1')
    .command('account <command> [arg]')
    .description('Ethereum account operations. Commands: ls [balance], keys, config')
    .action((command, arg, options) => {
        switch (command) {
            case account.ls.name: {
                account.ls(arg, options);
                break;
            }
            case account.keys.name: {
                account.keys(arg, options);
                break;
            }
            default: {
                console.log(`Command 'accounts ${command}' not found.`);
            }
        }
    });

program.command('ipfs <command> [arg]')
    .description('IPFS files operations. Command: add <path>, cat <hash>')
    .action((command, arg) => {
        switch (command) {
            case ipfs.add.name: {
                ipfs.add(arg);
                break;
            }
            case ipfs.cat.name: {
                ipfs.cat(arg);
                break;
            }
        }

    });

program.command('config [command] [arg]')
    .description('File-force configuration. Command: show')
    .action((command, arg, options) => {
       switch (command) {
           case config.show.name: {
               config.show(arg, options);
               break;
           }
           default: {
               config.show(arg, options);
           }
       }
    });


program.parse(process.argv); // notice that we have to parse in a new statement.


